/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FinanceAccountingFile as PrismaFinanceAccountingFile,
} from "@prisma/client";

export class FinanceAccountingFileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinanceAccountingFileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financeAccountingFile.count(args);
  }

  async financeAccountingFiles(
    args: Prisma.FinanceAccountingFileFindManyArgs
  ): Promise<PrismaFinanceAccountingFile[]> {
    return this.prisma.financeAccountingFile.findMany(args);
  }
  async financeAccountingFile(
    args: Prisma.FinanceAccountingFileFindUniqueArgs
  ): Promise<PrismaFinanceAccountingFile | null> {
    return this.prisma.financeAccountingFile.findUnique(args);
  }
  async createFinanceAccountingFile(
    args: Prisma.FinanceAccountingFileCreateArgs
  ): Promise<PrismaFinanceAccountingFile> {
    return this.prisma.financeAccountingFile.create(args);
  }
  async updateFinanceAccountingFile(
    args: Prisma.FinanceAccountingFileUpdateArgs
  ): Promise<PrismaFinanceAccountingFile> {
    return this.prisma.financeAccountingFile.update(args);
  }
  async deleteFinanceAccountingFile(
    args: Prisma.FinanceAccountingFileDeleteArgs
  ): Promise<PrismaFinanceAccountingFile> {
    return this.prisma.financeAccountingFile.delete(args);
  }
}
